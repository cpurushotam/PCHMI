/**************************************************************************

      Copyright (c) Branson Ultrasonics Corporation, 1996-2023

     This program is the property of Branson Ultrasonics Corporation
     Copying of this software is expressly forbidden, without the prior
     written consent of Branson Ultrasonics Corporation.

---------------------------- MODULE DESCRIPTION ----------------------------
    CalibrateForce.h file handles calibration related operations.
--------------------------- REVISION HISTORY ------------------------------
    rev1: 18/10/2024 - Initial version.
***************************************************************************/
#ifndef CALIBRATEFORCE_H
#define CALIBRATEFORCE_H

#include <QObject>
#include "UpdateScreens.h"

class CalibrateForce : public QObject
{
    /*Q_PROPERTY macro is used for declaring properties in classes that inherit QObject.
      Properties behave like class data members, but they have additional features accessible through the Meta-Object System.*/
    Q_OBJECT
    Q_PROPERTY(float CalibrationReadings READ getCalibrationReadings WRITE updateCalibrationReadings  NOTIFY calibrationReadingsChanged)

public:

    enum InterationNo
    {
        InterationNo1 = 1,
        InterationNo2,
        InterationNo3
    };

    explicit CalibrateForce(QObject *parent = nullptr);
    ~CalibrateForce();

    Q_INVOKABLE void isScreenReNavigated(bool Value);
    Q_INVOKABLE void onCalibrateForcePressed();
    Q_INVOKABLE void onContinuePressed(int InterationCount);
    Q_INVOKABLE void onCalibrationAbortPressed();

    float getCalibrationReadings() const;
    void updateCalibrationReadings(const float& CalibrationReadings);

private:
    bool m_IsScreenReNavigated;
    int m_ActiveWelderId = -1;
    float m_CalibrationReadings = 0;

    CalibrationAce *m_CalibrationAce;

    pthread_mutex_t mtx;

    /*Signals used to notify qml screen*/
signals:
    void calibrationReadingsChanged();
    void partContactDetected();

    /*Slot to be called when data update signal generated by communication thread*/
private slots:
    void OnCalibrateForceUpdated(CalibrationAce *CalibrationAce_Obj, int WelderId);
};
#endif // CALIBRATEFORCE_H
