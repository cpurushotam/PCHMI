/**************************************************************************

      Copyright (c) Branson Ultrasonics Corporation, 1996-2024

     This program is the property of Branson Ultrasonics Corporation
     Copying of this software is expressly forbidden, without the prior
     written consent of Branson Ultrasonics Corporation.


---------------------------- MODULE DESCRIPTION ----------------------------

AlarmManConfiguration class - which is responsible to do interaction between frontend and backend .

***************************************************************************/
#ifndef ALARMCONFIGURATION_H
#define ALARMCONFIGURATION_H
#include <QObject>
#include <QList>
#include <QAbstractListModel>
#include "AlarmLogStructure.h"
#include "AlarmConfig.h"
#include "UpdateScreens.h"

class AlarmManConfiguration : public QAbstractListModel {

    Q_OBJECT
    /*Q_PROPERTY macro is used for declaring properties in classes that inherit QObject.
      Properties behave like class data members, but they have additional features accessible through the Meta-Object System.*/
    Q_PROPERTY(QStringList rowNames READ rowNames NOTIFY rowNamesChanged)
    Q_PROPERTY(QStringList colNames READ colNames NOTIFY colNamesChanged)
    Q_PROPERTY(bool IsLoading      READ getIsLoading     WRITE updateIsLoading     NOTIFY loadingDataChanged)

public:
    explicit AlarmManConfiguration(QObject *parent = nullptr);

    enum BoolRoles {
        ValueRole = Qt::UserRole + 1
    };

    int rowCount(const QModelIndex &parent = QModelIndex()) const override;
    QVariant data(const QModelIndex &index, int role = Qt::DisplayRole) const override;
    QHash<int, QByteArray> roleNames() const override;
    Q_INVOKABLE bool setData(int row, bool value);

    QStringList rowNames() const;
    QStringList colNames() const;

    /*List of get and set functions to update qml variables*/
    Q_INVOKABLE void save() ;           // Invokable function to receive save request from HMI.
    Q_INVOKABLE void resetToDefault() ; // Invokable function to receive ResetToDef request from HMI.
    Q_INVOKABLE void cancelReqFromHMI() ; // Invokable function to receive Cancel request from HMI.

    Q_INVOKABLE int numberofRows() ;
    bool getIsLoading() const;
    void updateIsLoading(const bool& IsLoading);

private:

    int noOfRows = 0;       // number of rows
    int noOfColumns = 0;    // number of columns
    int m_ActiveWelderId = -1;
    bool m_IsLoadingFlag = false;
    bool isScreenUpdated = false;

    QStringList m_RowNames;     // List use to store the row names to present on qml.
    QStringList m_ColNames;     // List use to store the column names to present on qml.

    AlarmConfiguration m_AlarmManagementData;   //Local copy of structure
    AlarmMgrACE *m_AlarmMgrACE;

    /*Signals used to notify qml screen*/
signals:

    void rowNamesChanged();
    void colNamesChanged();
    void loadingDataChanged();

    /*Slot to be called when data update signal generated by communication thread*/
private slots:

    void OnAlarmConfigDetailsUpdated(AlarmMgrACE *AlarmMgrACEDetailsResult_Obj, int WelderId);
};

#endif // ALARMCONFIGURATION_H
