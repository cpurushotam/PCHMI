/**********************************************************************************************************

      Copyright (c) Branson Ultrasonics Corporation, 1996-2021

     This program is the property of Branson Ultrasonics Corporation
     Copying of this software is expressly forbidden, without the prior
     written consent of Branson Ultrasonics Corporation.

 ---------------------------- MODULE DESCRIPTION ----------------------------
 
 xxxxx
 
 **********************************************************************************************************/

#ifndef LOGIN_H
#define LOGIN_H

#include <QObject>
#include "UserManagement.h"
#include "GlobalUserSetting.h"
#include "SystemConfigurationGeneral_MB.h"

class Login : public QObject
{
    Q_OBJECT
    /*Q_PROPERTY macro is used for declaring properties in classes that inherit QObject.
      Properties behave like class data members, but they have additional features accessible through the Meta-Object System.*/

    Q_PROPERTY(bool IsScreenNavigated           READ getIsScreenNavigated          WRITE updateIsScreenNavigated          NOTIFY isScreenNavigatedChanged)
    Q_PROPERTY(bool IsResetScreenNavigated      READ getIsResetScreenNavigated     WRITE updateIsResetScreenNavigated     NOTIFY isResetScreenNavigatedChanged)

public:

    explicit Login(QObject *parent = nullptr);

    /*Q_INVOKABLE functions to call from QML */
    Q_INVOKABLE void onLoginButtonClicked(const QString userName, const QString password);
    Q_INVOKABLE void onAutoLoginRequest();
    Q_INVOKABLE int loginValidationFromASC();
    Q_INVOKABLE void onLoginResetButtonClicked(const QString userName, const QString Existingpassword, const QString Newpassword);
    Q_INVOKABLE int passWordResetValidationFromASC();
    Q_INVOKABLE void onLogoutButtonClicked();
    Q_INVOKABLE void onChangePasswordButtonClicked(const QString userName, const QString Existpassword, const QString password) ;
    Q_INVOKABLE int passWordChangeValidationFromASC();
    Q_INVOKABLE QString modifyUserWarningMessages();
    Q_INVOKABLE QString loginWarningMessages();
    Q_INVOKABLE QString getLoginUserLevel();
    Q_INVOKABLE void setCurrentActiveScreen(const int screen);
    Q_INVOKABLE bool getAutoLoginStatus();
    Q_INVOKABLE bool autoLoginStatusRead();
    Q_INVOKABLE QString getAutoLoginUserName();
    Q_INVOKABLE uint32_t getIdleLogOffTime();
    Q_INVOKABLE bool getUpdatedAuthCheck();
    Q_INVOKABLE bool getPasswordOverrideStatus();
    Q_INVOKABLE QString getLoginUserName();

    bool getIsScreenNavigated() const;
    void updateIsScreenNavigated(bool newIsScreenNavigated);

    bool getIsResetScreenNavigated() const;
    void updateIsResetScreenNavigated(bool newIsResetScreenNavigated);


    Q_INVOKABLE bool getAuthorityCheckStatus();
    Q_INVOKABLE bool authorityCheckStatusRead();
    Q_INVOKABLE bool passwordOverrideStatusRead();


private:

    int m_ActiveWelderId = -1;
    bool m_IsLoadingFlag = false;
    bool m_IsAutoLoginStatusRead = false;
    QString m_AutoLoginUserName;

    UserManagement *m_UserManagement;
    GlobalUserSetting *globalUserSettingPtr;
    SystemConfigurationGeneral_MB *sysConfigGenPtr;

    QString m_ModifyErrorCodes;
    QString m_LoginErrorCodesQ;

    QString m_loginUserLevel;

    bool m_IsScreenNavigated = false;
    bool m_IsResetScreenNavigated =false;

    int m_CurrentActiveScreen;

    bool m_IsAuthorityCheckStatusRead = false;
    bool m_IsPasswordOverrideStatusRead = false;

signals:
    /*Signals to notify qml about data update from ASC.*/
    void loadingDataChangedd();
    void modifyPassChangedd();
    void isScreenNavigatedChanged();
    void isResetScreenNavigatedChanged();

private slots:
    /*Slot to be called when data update signal generated by communication thread*/
    void OnLoginScreenDetailsUpdated(UserManagement *UserManagement_Obj, int WelderId);

};

#endif // LOGIN_H
